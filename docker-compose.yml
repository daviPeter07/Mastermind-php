services:
  app:
    build: .
    container_name: mastermind_php_app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=${DB_PORT}
      - JWT_SECRET=${JWT_SECRET}
    healthcheck:
      test: ["CMD", "php", "-r", "echo 'API OK';"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  postgres:
    image: postgres:15
    container_name: mastermind_php_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_php_data:/var/lib/postgresql/data
      - ./Database/migration.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot:
    build: .
    container_name: mastermind_php_bot
    restart: always
    command: php scripts/run-bot.php
    volumes:
      - .:/app
    depends_on:
      app:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - MASTERMIND_API_TOKEN=${MASTERMIND_API_TOKEN}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=${DB_PORT}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - default

volumes:
  postgres_php_data:

networks:
  default:
    driver: bridge